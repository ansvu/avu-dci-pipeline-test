- name: Set container image facts
  ansible.builtin.set_fact:
    image_name: "{{ current_container_image.split('@')[0].split(':')[0].split('/')[-1] }}"
    repo_name: "{{ current_container_image.split('@')[0].split(':')[0].split('/')[1] }}"
    registry_name: "{{ current_container_image.split('@')[0].split(':')[0].split('/')[0] }}"
    repository_name: "{{ current_container_image.split('@')[0].split(':')[0].split('/')[1:] | join('/') }}"
    pyxis_apikey: "{{ lookup('file', pyxis_apikey_path) }}"
    catalog_url: "https://catalog.redhat.com/api/containers/v1"

- name: Get certification projects for organization
  ansible.builtin.uri:
    url: >
      {{ catalog_url }}/vendors/org-id/{{ organization_id }}/projects/certification?filter=project_status%3D%3Dactive&page_size={{ page_size }}&page=0
    method: GET
    headers:
      X-API-KEY: "{{ pyxis_apikey }}"
    body_format: json
    status_code: 200
    timeout: 120
  register: cert_project_list_output
  retries: 20
  delay: 3
  until: not cert_project_list_output.failed

- name: Get certification projects information from the organization
  ansible.builtin.set_fact:
    cert_project_data: "{{ cert_project_list_output.json.data | json_query(query_data) }}"  # noqa: jinja[invalid]
  vars:
    query_data: "[?container.repository == '{{ repository_name }}']"

- name: Set fact if name is already in an active certification project
  ansible.builtin.set_fact:
    cert_project_exists_own_org: true
  loop: "{{ cert_project_data }}"
  loop_control:
    label: "{{ item._id }}"
  when:
    - cert_project_data | default([]) | length > 0
    - item.container.registry == registry_name
    - item.container.repository.split('/')[0] == repo_name
    - item.project_status == "active"

- block:
    - name: Set project ID to reuse it later
      ansible.builtin.set_fact:
        cert_project_id: "{{ cert_project_data | json_query(query_data) | flatten | last }}"
      vars:
        query_data: "[]._id"
      when:
        - cert_project_exists_own_org | default(false) | bool
        - cert_project_data | default([]) | length > 0

    - name: Print the cert_project_id of
      debug:
        msg: "{{ cert_project_id }}"

    - name: Initialize published flag
      set_fact:
        is_published: false

    - name: Wait for the container image to publish in the catalog
      ansible.builtin.uri:
        url: "{{ catalog_url }}/projects/certification/id/{{ cert_project_id }}/images?include=data.repositories.published&page_size=1&page=0"
        method: GET
        headers:
          X-API-KEY: "{{ pyxis_apikey }}"
        #body_format: json
        status_code: 200
        timeout: 120
      register: pyxis_published_info
      retries: 20 #set to 60 retries
      delay: 60 #need to set to 60s
      until: pyxis_published_info.json.data[0].repositories | selectattr('published', 'equalto', true) | list | length > 0

    - name: Set published flag if container image is certified from catalog
      set_fact:
        is_published: true
      when: pyxis_published_info.json.data[0].repositories | selectattr('published', 'equalto', true) | list | length > 0

    - name: Print Container project status when published
      debug:
        msg: "Container project id {{ cert_project_id }} is published on the catalog!"
      when: is_published

    - name: Print Container project status when not published
      debug:
        msg: "Container project id {{ cert_project_id }} is not published on the catalog!"
      when: not is_published
  when: cert_project_id | default('') | length > 0
...
